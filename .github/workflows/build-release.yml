name: Create releases for Linux, Windows and MacOS & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-release:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.11 ]
        poetry-version: [ 1.3.2 ]
        os: [ ubuntu-20.04, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        if: matrix.os != 'macOS-latest'
        with:
          python-version: ${{ matrix.python-version }}

      # Based on: https://github.com/actions/virtual-environments/issues/1256#issuecomment-770270252
      - name: Set up Python for macOS
        if: matrix.os == 'macOS-latest'
        run: | 
          curl https://www.python.org/ftp/python/${PYTHON_VERSION}/python-${PYTHON_VERSION}-macos11.pkg -o "python.pkg"
          sudo installer -pkg python.pkg -target /
          echo "/Library/Frameworks/Python.framework/Versions/${{ matrix.python-version }}/bin" >> $GITHUB_PATH
        env:
          PYTHON_VERSION: ${{ matrix.python-version }}.0

      - name: Install poetry
        shell: bash
        run: pip3 install poetry==${{ matrix.poetry-version }}

      - name: Disable virtualenvs
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Build executable
        run: pyinstaller --clean pyinstaller.spec

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aw-watcher-utilization-${{ matrix.os }}
          path: dist/aw-watcher-utilization
